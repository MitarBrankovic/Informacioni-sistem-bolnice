<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--// DatePicker style //-->
    <Style x:Key="DatePickerStyle"
           TargetType="{x:Type DatePicker}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="3" />
    </Style>

    <!-- Fill Brushes -->
    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2f2f2f" Offset="0.0"/>
          <GradientStop Color="#2c2c2c" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2f2f2f" Offset="0.0"/>
          <GradientStop Color="#2c2c2c" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2f2f2f" Offset="0.0"/>
          <GradientStop Color="#2e2e2e" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2f2f2f" Offset="0.0"/>
          <GradientStop Color="#2e2e2e" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2f2f2f" Offset="0.0"/>
          <GradientStop Color="#2a2a2a" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#2b2b2b" Offset="0.0"/>
          <GradientStop Color="#2e2e2e" Offset="0.1"/>
          <GradientStop Color="#2e2e2e" Offset="0.9"/>
          <GradientStop Color="#2b2b2b" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#2e2e2e" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#2f2f2f" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#2d2d2d" />

    <!-- Border Brushes -->

    <SolidColorBrush x:Key="NormalBorderBrush" Color="#CCC"/>
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#CCC"/>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#777" Offset="0.0"/>
          <GradientStop Color="#000" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PressedBorderBrush" Color="#888"/>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="White" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
    
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border" 
                Grid.ColumnSpan="2"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1" />
            <Border 
                Grid.Column="0"
                Margin="1" 
                Background="{StaticResource WindowBackgroundBrush}" 
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="0,0,1,0" />
            <Path 
                x:Name="Arrow"
                Grid.Column="1"     
                Fill="{StaticResource GlyphBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!--// ComboBox style //-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            FontSize="18"
                            Foreground="White"
                            CaretBrush="White"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid 
                                Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource WindowBackgroundBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource SolidBorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--// Text label font style //-->
    <Style x:Key="font_label_style"
           TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalAlignment"
                Value="Left"/>
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="FontSize"
                Value="18"/>
        <Setter Property="Background"
                Value="Transparent"/>
    </Style>
    
    <!--// TextBox style //-->
    <Style x:Key="TextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#2c2c2c"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="3" />
    </Style>

    <!--// PasswordBox style //-->
    <Style x:Key="PasswordBoxStyle"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="#2c2c2c"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="3" />
    </Style>

    <!--// RadioButton style template //-->
    <Style x:Key="radio_stayle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16">
                                <!--Define size of the Bullet-->
                                <!--The two borders-->
                                <Border Name="RadioOuter"
                                        Background="Transparent"
                                        BorderBrush="White"
                                        BorderThickness="2"
                                        CornerRadius="2" />
                                <Border CornerRadius="0"
                                        Margin="4"
                                        Name="RadioMark"
                                        Background="White"
                                        Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--Text element-->
                        <TextBlock Margin="3,1,0,0" 
                                   Foreground="White"
                                   FontSize="16">
                        <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                            <Setter TargetName="RadioMark"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--// Listview items style template //-->
    <Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Height="50"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#474747"/>
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#474747"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--// Toggle Button Style Template //-->
    <ImageBrush x:Key="tb_checked"
                ImageSource="../Assets/tgBtn_checked.png"
                Stretch="None"/>

    <Style x:Key="tb_style"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_checked}"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_checked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--// Text font style //-->
    <Style x:Key="font_style"
           TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalAlignment"
                Value="Left"/>
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="FontSize"
                Value="20"/>
        <Setter Property="Background"
                Value="Transparent"/>
    </Style>

    <!--// Header color style //-->
    <Style x:Key="header_style"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#272727"/>
    </Style>

    <!--// Navigation Panel color style //-->
    <Style x:Key="nav_pnl_style"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#272727"/>
    </Style>

    <!--// Surface color style //-->
    <Style x:Key="surface_style"
           TargetType="Grid">
        <Setter Property="Background"
                Value="#161616"/>
    </Style>

</ResourceDictionary>